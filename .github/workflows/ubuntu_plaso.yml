name: Process Evidence Folders with Plaso (psteal)

on:
  push:
    paths:
      - 'uac/**' # Monitor changes in the uac directory

jobs:
  detect-new-folders:
    runs-on: ubuntu-22.04

    # Declare an output "folders" at the job level
    outputs:
      folders: ${{ steps.detect.outputs.folders }}

    steps:
      # Step 1: Checkout the repository with full history
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch full git history so HEAD^ is available

      # Step 2: Identify new folders
      - name: Identify New Folders
        id: detect
        run: |
          # We'll compare the current commit (HEAD) with its parent (HEAD^).
          # If the repository has only 1 commit or no HEAD^, this could still fail.
          # But fetch-depth: 0 usually solves that.

          # Identify newly *added* items in the 'uac/' directory and extract just the immediate folder name.
          NEW_FOLDERS=$(git diff --name-status HEAD^ HEAD \
            | grep "^A" \
            | grep "^A\suac/" \
            | awk '{print $2}' \
            | awk -F/ '{print $2}' \
            | sort -u)

          echo "Newly detected folders:"
          echo "$NEW_FOLDERS"

          # We'll store the final JSON array in a variable called FOLDERS_JSON.
          if [ -z "$NEW_FOLDERS" ]; then
            # No new folders => an empty JSON array
            FOLDERS_JSON="[]"
          else
            # Turn the list of folders (one per line/space) into a proper JSON array.
            #  1) echo the folders
            #  2) split on newline
            #  3) remove any empty entries
            FOLDERS_JSON=$(echo "$NEW_FOLDERS" | jq -R -s 'split("\n") | map(select(. != ""))')
          fi

          echo "FOLDERS_JSON=$FOLDERS_JSON"

          # Now write it as an output using GITHUB_OUTPUT
          echo "folders=$FOLDERS_JSON" >> "$GITHUB_OUTPUT"

  process-folder:
    needs: detect-new-folders

    # If there are no new folders (i.e. `[]`), skip this job entirely.
    if: needs.detect-new-folders.outputs.folders != '[]'

    runs-on: ubuntu-22.04

    strategy:
      matrix:
        folder: ${{ fromJson(needs.detect-new-folders.outputs.folders) }}
        # Each folder in the JSON array becomes one job in the matrix.

    steps:
      # Step 1: Checkout again so we have the code/folders
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Install Plaso Tools
      - name: Install Plaso Tools
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-plaso

      # Step 3: Extract tar.gz files (if present)
      - name: Extract tar.gz Files
        run: |
          echo "Looking for tar.gz files in ./uac/${{ matrix.folder }}"
          if ls ./uac/${{ matrix.folder }}/*.tar.gz 1> /dev/null 2>&1; then
            for archive in ./uac/${{ matrix.folder }}/*.tar.gz; do
              echo "Extracting $archive"
              tar -xzf "$archive" -C "./uac/${{ matrix.folder }}"
            done
          else
            echo "No tar.gz found in ./uac/${{ matrix.folder }}"
          fi

      # Step 4: Run psteal.py on the assigned folder
      - name: Process Evidence with psteal
        run: |
          echo "Processing folder: ./uac/${{ matrix.folder }}"
          psteal.py \
            --source "./uac/${{ matrix.folder }}/" \
            -w "./inv-${{ matrix.folder }}.json" \
            -o json_line

      # Step 5: Upload the output file as an artifact
      - name: Upload psteal Output
        uses: actions/upload-artifact@v3
        with:
          name: "inv-${{ matrix.folder }}"
          path: "./inv-${{ matrix.folder }}.json"
